# Copyright (c) 2023 Jeroen van Dooren <jeroen.van.dooren@nobleo.nl>
# Copyright (c) 2024 NDR Solution (Thailand) Co., Ltd.
# SPDX-License-Identifier: Apache-2.0

description: |
  STM32 MDMA controller

  The master direct memory access (MDMA) is used in order to provide high-speed 
  data transfer between memory and memory, or between peripherals and memory.
  The MDMA works in conjunction with the standard DMA controllers (DMA1 or DMA2). 
  It offers up to 16 channels, each dedicated to manage memory access requests from one of 
  the DMA stream memory buffer or other peripherals (with integrated FIFO).
  channel: a phandle to the ADMA controller plus the following four integer cells:
    1. channel: the channel from 0 to (<dma-channels> - 1).
    2. slot: DMA periph request ID, which is written in the TSEL[5:0] bits of the MDMA_CxTBR
    the slot is a value between <0> .. (<dma-requests> - 1).
    3. channel-config: A 32bit mask specifying the DMA channel configuration
    which is device dependent:
      -bit 0-1: MDMA_CxTCR.SINC[1:0]: Source increment mode
        0x0: Source address pointer is fixed
        0x2: Source address pointer is incremented after each data transfer
        0x3: Source address pointer is decremented after each data transfer
      -bit 2-3: MDMA_CxTCR.DINC[1:0]: Destination increment mode
        0x0: Destination address pointer is fixed
        0x2: Destination address pointer is incremented after each data transfer
        0x3: Destination address pointer is decremented after each data transfer
      -bit 8-9: MDMA_CxTCR.SINCOS[1:0]: Source increment offset size
        0x0: byte (8bit)
        0x1: half-word (16bit)
        0x2: word (32bit)
        0x3: double-word (64bit)
      -bit 10-11: MDMA_CxTCR.DINCOS[1:0]: Destination increment offset size
        0x0: byte (8bit)
        0x1: half-word (16bit)
        0x2: word (32bit)
        0x3: double-word (64bit)
      -bit 24-18: MDMA_CxTCR.TLEN[6:0]: The number of bytes to be transferred in a single transfer
                  (min = 1 byte, max = 128 bytes)
      -bit 29:28: MDMA_CxTCR.TRGM[1:0]: Trigger mode 
        0x0: Each MDMA request triggers a buffer transfer (max 128 bytes)
        0x1: Each MDMA request triggers a block transfer (max 64K bytes)
        0x2: Each MDMA request triggers a repeated block transfer
        0x3: Each MDMA request triggers a linked list transfer
    4. priority: MDMA_CxCR.PL[1:0] The priority level
      0x0: low
      0x1: medium
      0x2: high
      0x3: very high
    
    examples for stm32h7
     mdma1: dma-controller@52000000 {
         compatible = "st,stm32-mdma";
         ...
         st,mem2mem;
         dma-requests = <16>;
         status = "disabled";
        };

compatible: "st,stm32-mdma"

include: dma-controller.yaml

properties:
  reg:
    required: true

  interrupts:
    required: true

  dma-offset:
    type: int
    description: >
      offset in the table of channels when mapping to a DMAMUX
      for 1st dma instance, offset is 0,
      for 2nd dma instance, offset is the nb of dma channels of the 1st dma,
      for 3rd dma instance, offset is the nb of dma channels of the 2nd dma
      plus the nb of dma channels of the 1st dma instance, etc.

  "#dma-cells":
    const: 4

# Parameter syntax of stm32 follows the dma client dts syntax
# in the Linux kernel declared in
# https://git.kernel.org/pub/scm/linux/kernel/git/devicetree/devicetree-rebasing.git/plain/Bindings/dma/st,stm32-dma.yaml

dma-cells:
  - channel
  - slot
  - channel-config
  - priority
