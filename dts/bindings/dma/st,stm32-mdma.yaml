# Copyright (c) 2023 Jeroen van Dooren <jeroen.van.dooren@nobleo.nl>
# Copyright (c) 2024 NDR Solution (Thailand) Co., Ltd.
# SPDX-License-Identifier: Apache-2.0

description: |
  STM32 MDMA controller

  The master direct memory access (MDMA) is used in order to provide high-speed 
  data transfer between memory and memory, or between peripherals and memory.
  The MDMA works in conjunction with the standard DMA controllers (DMA1 or DMA2). 
  It offers up to 16 channels, each dedicated to manage memory access requests from one of 
  the DMA stream memory buffer or other peripherals (with integrated FIFO).
  channel: a phandle to the ADMA controller plus the following four integer cells:
    1. channel: the channel from 0 to (<dma-channels> - 1).
    2. slot: DMA periph request ID, which is written in the TSEL[5:0] bits of the MDMA_CxTBR
    the slot is a value between <0> .. (<dma-requests> - 1).
    3. channel-config: A 32bit mask specifying the DMA channel configuration
    which is device dependent. See stm32_dma.h:
      -bit 0-1: MDMA_CxTCR.SINC[1:0]: Source increment mode
        0x0: Source address pointer is fixed
        0x2: Source address pointer is incremented after each data transfer
        0x3: Source address pointer is decremented after each data transfer
      -bit 2-3: MDMA_CxTCR.DINC[1:0]: Destination increment mode
        0x0: Destination address pointer is fixed
        0x2: Destination address pointer is incremented after each data transfer
        0x3: Destination address pointer is decremented after each data transfer
      -bit 4-5 : Reserved
      -bit 6-7 : Direction (see dma.h)
        0x0: STM32_DMA_MEMORY_TO_MEMORY: MEM to MEM
        0x1: STM32_DMA_MEMORY_TO_PERIPH: MEM to PERIPH
        0x2: STM32_DMA_PERIPH_TO_MEMORY: PERIPH to MEM
        0x3: reserved for PERIPH to PERIPH
      -bit 9 : Peripheral Increment Address
        0x0: STM32_DMA_PERIPH_NO_INC: no address increment between transfers
        0x1: STM32_DMA_PERIPH_INC: increment address between transfers
      -bit 10 : Memory Increment Address
        0x0: STM32_DMA_MEM_NO_INC: no address increment between transfers
        0x1: STM32_DMA_MEM_INC: increment address between transfers
      -bit 11-12 : Peripheral data size
        0x0: STM32_DMA_PERIPH_8BITS: Byte (8 bits)
        0x1: STM32_DMA_PERIPH_16BITS: Half-word (16 bits)
        0x2: STM32_DMA_PERIPH_32BITS: Word (32 bits)
        0x3: reserved
      -bit 13-14 : Memory data size
        0x0: STM32_DMA_MEM_8BITS: Byte (8 bits)
        0x1: STM32_DMA_MEM_16BITS: Half-word (16 bits)
        0x2: STM32_DMA_MEM_32BITS: Word (32 bits)
        0x3: reserved
      -bit 15: Reserved
      -bit 16-17 : Priority level
        0x0: STM32_DMA_PRIORITY_LOW: low
        0x1: STM32_DMA_PRIORITY_MEDIUM: medium
        0x2: STM32_DMA_PRIORITY_HIGH: high
        0x3: STM32_DMA_PRIORITY_VERY_HIGH: very high

    examples for stm32h7
     mdma1: dma-controller@52000000 {
         compatible = "st,stm32-mdma";
         ...
         st,mem2mem;
         dma-requests = <16>;
         status = "disabled";
        };

compatible: "st,stm32-mdma"

include: dma-controller.yaml

properties:
  reg:
    required: true

  interrupts:
    required: true

  "#dma-cells":
    const: 3

# Parameter syntax of stm32 follows the dma client dts syntax
# in the Linux kernel declared in
# https://git.kernel.org/pub/scm/linux/kernel/git/devicetree/devicetree-rebasing.git/plain/Bindings/dma/st,stm32-dma.yaml

dma-cells:
  - channel
  - slot
  - channel-config
